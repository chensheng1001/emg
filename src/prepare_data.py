import pathlib

import pandas


def generate_data_list(data_dir: pathlib.Path, data_count: dict, class_num: int):
    """
    Generate a data_list.hf file that contains the information of whole dataset.

    Shouldn't use it before all data are generated by MATLAB code.

    :param data_dir: The path to the folder that contains all processed data (no sub-folder).
    :param data_count: The number range of every experiment variable.
    :param class_num: The number of classes.
    """
    
    if not data_dir.exists() or not data_dir.is_dir():
        raise FileNotFoundError("Can not find data folder {name}".format(name = data_dir))
    

    dataset_path = data_dir / 'data_list.hf'

    with pandas.HDFStore(str(dataset_path), mode = 'w') as store:
        data = []
        for usr_ind in range(1, data_count['user'] + 1):
            for class_ind in range(1, class_num + 1):
                for seg_ind in range(1, data_count['segment'] + 1):
                    sample_name = 'volunteer' + str(usr_ind) + '_' + str(class_ind) + '_idx' + str(seg_ind) + '.mat'
                    sample_path = data_dir / sample_name
                    print(sample_name)
                    if not sample_path.exists():
                        continue
                    if not sample_path.is_file():
                        raise FileNotFoundError("Can not find sample {name}".format(name = sample_name))
                    data.append([usr_ind - 1, class_ind - 1, seg_ind - 1, sample_name])

        data_frame = pandas.DataFrame(data, columns = ['user', 'class', 'segment', 'data_name'])            
        store.put('data', data_frame)
        del data, data_frame
        

if __name__ == '__main__':
    from configs import default_configs as conf
    
    generate_data_list(conf.data_dir, conf.data_count, conf.class_num)